---
- name: Create Traefik directory
  file:
    path: '{{ item }}'
    state: directory
    mode: 0755
  loop:
    - tools/traefik/config

- name: Create docker compose file
  template:
    src: 'traefik/traefik-compose.yaml.j2'
    dest: 'tools/traefik/docker-compose.yaml'
    mode: 0755

- name: Create docker compose file
  template:
    src: 'traefik/traefik-config.yaml.j2'
    dest: 'tools/traefik/config/traefik-config.yaml'
    mode: 0755

- name: Docker compose start traefik
  shell: docker-compose up -d
  args:
    chdir: 'tools/traefik'

- name: Production | Create projects directory global server
  file:
    path: '{{ item }}'
    state: directory
    mode: 0755
  loop:
    - projects/{{ org_name }}/config
    - projects/{{ org_name }}/config/admin-webapp
    - projects/{{ org_name }}/config/adminservice/storage
    - projects/{{ org_name }}/config/patientservice/storage
    - projects/{{ org_name }}/config/rocketchat
    - projects/{{ org_name }}/config/therapist-webapp
    - projects/{{ org_name }}/config/therapistservice/storage
    - projects/{{ org_name }}/config/libraryservice/storage

- name: Create docker compose file
  template:
    src: 'compose.yaml.j2'
    dest: 'projects/{{ org_name }}/docker-compose.yaml'
    mode: 0755

- name: Docker compose start all container
  shell: docker-compose up -d
  args:
    chdir: 'projects/{{ org_name }}'

- name: Wait for containers ready
  pause:
    seconds: 30

# Run artisan admin service
- name: Run artisan migration
  shell: 'docker-compose exec admin-{{ org_name }}-service /usr/bin/php artisan migrate --force'
  args:
    chdir: 'projects/{{ org_name }}'


- name: Run artisan storage link
  shell: 'docker-compose exec admin-{{ org_name }}-service /usr/bin/php artisan storage:link'
  args:
    chdir: 'projects/{{ org_name }}'

- name: Run artisan clear cache
  shell: 'docker-compose exec admin-{{ org_name }}-service /usr/bin/php artisan {{ item }}'
  args:
    chdir: 'projects/{{ org_name }}'
  loop:
    - cache:clear
    - config:clear
    - view:clear
    - route:clear

- name: Run artisan import
  shell: 'docker-compose exec admin-{{ org_name }}-service /usr/bin/php artisan hi:import-default-translation'
  args:
    chdir: 'projects/{{ org_name }}'

# Run artisan therapist service
- name: Run artisan migration
  shell: 'docker-compose exec therapist-{{ org_name }}-service /usr/bin/php artisan migrate --force'
  args:
    chdir: 'projects/{{ org_name }}'

- name: Run artisan storage link
  shell: 'docker-compose exec therapist-{{ org_name }}-service /usr/bin/php artisan storage:link'
  args:
    chdir: 'projects/{{ org_name }}'

- name: Run artisan clear cache
  shell: 'docker-compose exec therapist-{{ org_name }}-service /usr/bin/php artisan {{ item }}'
  args:
    chdir: 'projects/{{ org_name }}'
  loop:
    - cache:clear
    - config:clear
    - view:clear
    - route:clear

# Run artisan patient service
- name: Run artisan migration
  shell: 'docker-compose exec patient-{{ org_name }}-service /usr/bin/php artisan migrate --force'
  args:
    chdir: 'projects/{{ org_name }}'

- name: Run artisan storage link
  shell: 'docker-compose exec patient-{{ org_name }}-service /usr/bin/php artisan storage:link'
  args:
    chdir: 'projects/{{ org_name }}'

- name: Run artisan clear cache
  shell: 'docker-compose exec patient-{{ org_name }}-service /usr/bin/php artisan {{ item }}'
  args:
    chdir: 'projects/{{ org_name }}'
  loop:
    - cache:clear
    - config:clear
    - view:clear
    - route:clear
